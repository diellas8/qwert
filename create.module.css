src/modals---> CREATE --> create.module.css



.dropdowns {
    display: flex;
    flex-direction: row;
}

.dropdownCategory {
    width: 100%;
}

.footer {
    margin-top: 100px;
    display: flex; 
    justify-content: flex-end;
}

.footer>button{
    margin-left: 10px;
}

.sideWalk {
    background-color: #67AA3C;
}

.shoring {
    background-color: #9640BE;
}

.scaffold {
    background-color: #EFD652;
}

2))) index.js

import { Modal, Input, Select } from "antd";
import { useState } from "react";
import { CreateButton } from "../../Buttons";
import styles from "./create.module.css";

export const CreateModal = ({ onCreate, onCancel, open }) => {
  const [name, setName] = useState("");
  const [category, setCategory] = useState([]);
  const [status, setStatus] = useState("");



  const handleCancel = () => {
    setName("");
    setCategory([]);
    onCancel();
  };

  return (
    <Modal
      open={open}
      onCancel={handleCancel}
      
    >
      <p>Name</p>
      <Input value={name} onChange={(e) => setName(e.target.value)} />
  
    </Modal>
  );
};





3))))) SERVICE        src/modal/service ---> index.js

import { Drawer, Table } from "antd";
import styles from "./service.module.css";
import { CreateButton } from "../../Buttons";
import { useState } from "react";
import classNames from "classnames";
import { CheckOutlined } from "@ant-design/icons";

const lorems = [
  {
    nr: 1,
    item: 1,
    quantity: 10,
    description: "Lorem Ipsum is simply dummy text of the printing and typese...",
    notes: "Lorem Ipsum is simply dummy text of the printing and typese...",
  },
  {
    nr: 2,
    item: 2,
    quantity: 20,
    description: "Lorem Ipsum is simply dummy text of the printing and typese....",
    notes: "Lorem Ipsum is simply dummy text of the printing and typese....",
  },
  {
    nr: 3,
    item: 3,
    quantity: 30,
    description: "Lorem Ipsum is simply dummy text of the printing and typese....",
    notes: "Lorem Ipsum is simply dummy text of the printing and typese....",
  },
  {
    nr: 4,
    item: 4,
    quantity: 40,
    description: "Lorem Ipsum is simply dummy text of the printing and typese....",
    notes: "Lorem Ipsum is simply dummy text of the printing and typese....",
  },
];

const tableColumns = [
  {
    title: "Nr.",
    dataIndex: "nr",
    key: "nr",
  },
  {
    title: "Item",
    dataIndex: "item",
    key: "item",
  },
  {
    title: "Quantity",
    dataIndex: "quantity",
    key: "quantity",
  },
  {
    title: "Description",
    dataIndex: "description",
    key: "description",
  },
  {
    title: "Notes",
    dataIndex: "notes",
    key: "notes",
  },
];

export const ServiceModal = ({ open, onClose, row }) => {
  console.log(row);

  const [selectedCategory, setSelectedCategory] = useState();

  return (
    <Drawer width="100VW" open={open} closable={false}>
      <div className={styles.container}>
        <div className={styles.categories}>
          <p className={styles.categoryTitle}>Selected</p>
          <div style={{ width: "100%", height: "100%" }}>
            {row?.category?.map((category) => {
              return (
                <div
                  className={classNames({
                    [styles.category]: true,
                    [styles.categorySelected]: category === selectedCategory,
                  })}
                  onClick={() => setSelectedCategory(category)}
                >
                  <div></div>
                  {category}
                  {category === selectedCategory ? (
                    <CheckOutlined />
                  ) : (
                    <div></div>
                  )}
                </div>
              );
            })}
          </div>
          <CreateButton type="back" label="Back" onClick={onClose} />
        </div>

        <div className={styles.items}>
          <p className={styles.categoryTitle}>
            {selectedCategory || "Data Grid"}
          </p>
          <Table columns={tableColumns} dataSource={lorems} />
          {/* {lorems.map((lorem) => {
            return (
              <div className={styles.itemContainer}>
                <p>{lorem.nr}</p>
                <p>{lorem.item}</p>
                <p>{lorem.quantity}</p>
                <p>{lorem.description}</p>
                <p>{lorem.notes}</p>
              </div>
            );
          })} */}
        </div>
      </div>
    </Drawer>
  );
};


3))))   src/modal/service ---> service.module.css

.container {
    display: flex;
    flex-direction: row;
}

.categories {
    flex: 2;
    box-shadow: 0px 1px 4px 0px #00000029;
    margin-right: 10px;
    border-radius: 10px;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: center;
}

.categories>button {
    margin-bottom: 20px;
    max-width: 40%;
}

.categoryTitle {
    margin-top: -10px;
    height: 40px;
    background-color: #F8F8FA;
    line-height: 40px;
    text-align: left;
    width: 100%;
}

.category {
    background-color: #F8F8FA;
    margin: 5px;
    height: 32px;
    border-radius: 5px;
    line-height: 32px;
    text-align: center;
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding-right: 5px;
}

.category:hover{ 
    cursor: pointer;
}

.categorySelected {
    background-color: #67AA3C;
    color: white;
}

.items {
    flex: 6;
    box-shadow: 0px 1px 4px 0px #00000029;
    border-radius: 10px;
    display: flex;
    flex-direction: column;
}

.itemContainer {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
}


                                                    5))))))) JASHTE TYNE --->inex.js

export * from "./Create";
export * from "./Service";





















                                    
